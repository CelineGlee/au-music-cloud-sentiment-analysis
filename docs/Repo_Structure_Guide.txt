To teaching staff,

Below is the structure of our repository. Code predominantly exists in either backend/ or fission/ (see notes in tree for each)

├── Makefile (This is for quick port-forward, save typing)
├── README.md
├── backend (This stores components that were deployed using kubectl - our sentiment analyser, our API, as well as a Bluesky harvester that was for poc)
│   ├── __init__.py
│   ├── analyser-api
│   │   └── app
│   ├── analyser_api
│   │   ├── Dockerfile
│   │   ├── __init__.py
│   │   ├── app
│   │   └── requirements.txt
│   ├── bluesky_harvester_poc (This is for PoC, we decided not to move on due to not much data on bluesky.)
│   │   ├── __init__.py
│   │   ├── bluesky_harvester.py
│   │   ├── elastic.py
│   │   ├── elastic_config.json
│   │   ├── health.py
│   │   ├── healthcm.py
│   │   └── specs
│   ├── check_data_election
│   │   └── query_any_keywords.py
│   └── sentiment-score-model
│       ├── Dockerfile
│       ├── download_model.py
│       ├── mastodon-sentiment-analyzer-configmap.yaml
│       ├── mastodon-sentiment-analyzer-cronjob.yaml
│       ├── mastodon-sentiment-analyzer-script.yaml
│       ├── mastodon_sentiment_analyzer.py
│       ├── model-download-job.yaml
│       ├── model-scripts-configmap.yaml
│       ├── model-test-job.yaml
│       ├── persistent_store_model.yaml
│       ├── reddit-comment-analyzer-configmap.yaml
│       ├── reddit-comment-analyzer-cronjob.yaml
│       ├── reddit-comment-analyzer-script.yaml
│       ├── reddit-sentiment-analyzer-configmap.yaml
│       ├── reddit-sentiment-analyzer-cronjob.yaml
│       ├── reddit-sentiment-analyzer-script.yaml
│       ├── reddit_comment_analyzer.py
│       ├── reddit_sentiment_analyzer.py
│       ├── requirements.txt
│       ├── sentiment-analyzer-index-configmap.yaml
│       ├── sentiment-analyzer-index-cronjob.yaml
│       ├── sentiment-rbac.yaml
│       └── sentiment_analyzer_index.py
├── database
│   └── elasticsearch-reddit
├── docs
│   ├── HighLevelSystemArchitecture.drawio
│   ├── HighLevelSystemArchitecture.drawio.crswap
│   ├── HighLevelSystemArchitecture_0105.drawio
│   ├── HighLevelSystemArchitecture_final.drawio (This is the final high level architecture diagram)
│   └── repo-structure.txt
├── elastic
│   └── flux-system
│       ├── gotk-components.yaml
│       ├── gotk-sync.yaml
│       └── kustomization.yaml
├── fission (This is where our Fission package and specs live, including Reddit/Mastodon harvester, pre-processor, keyword-digger)
│   ├── package
│   │   ├── __pycache__
│   │   ├── build.sh
│   │   ├── functions
│   │   ├── harvester.py
│   │   ├── keyword_digger.py
│   │   ├── mastodon_harvest_config.json
│   │   ├── pre_processor.py
│   │   ├── reddit_harvest_config.json
│   │   ├── requirement_validator.sh
│   │   ├── requirements.txt
│   │   └── sentiment_generator.py
│   └── specs
│       ├── README
│       ├── env-python.yaml
│       ├── fission-deployment-config.yaml
│       ├── function-harvest-mastodon-entry.yaml
│       ├── function-harvest-mastodon-individual.yaml
│       ├── function-harvest-reddit-comments.yaml
│       ├── function-harvest-reddit.yaml
│       ├── function-keyword-digger.yaml
│       ├── function-preprocess.yaml
│       ├── function-reddit-comments-preprocess.yaml
│       ├── function-reddit-preprocess.yaml
│       ├── mqtrigger-harvest-reddit-comments.yaml
│       ├── mqtrigger-reddit-comments-preprocess.yaml
│       ├── mqtrigger-reddit-preprocess.yaml
│       ├── package-my-package.yaml
│       ├── reddit_harvest_config.json
│       ├── route-harvest-mastodon.yaml
│       ├── timetrigger-harvest-mastodon-timer.yaml
│       ├── timetrigger-harvest-reddit-timer.yaml
│       ├── timetrigger-keyword-digger-timer.yaml
│       └── timetrigger-preprocess-timer.yaml
├── jupyter (this is our front end.)
│   ├── all_singers.ipynb
│   ├── all_singers_plot.ipynb
│   ├── artists.json
│   ├── artists_cleaned.json
│   ├── election_date_count.json
│   ├── election_density.ipynb
│   ├── requirements.txt
│   └── trump_plot.ipynb
├── helm (This is the helm used to provision services like analyser-api, keda, monitor and redis)
│   ├── analyser_api
│   │   ├── Chart.yaml
│   │   ├── templates
│   │   └── values.yaml
│   ├── keda
│   │   ├── installation
│   │   └── scaled-object.yaml
│   ├── monitor
│   │   ├── blackbox-exporter-cm.yaml
│   │   ├── blackbox-exporter-values.yaml
│   │   ├── default-values.yaml
│   │   ├── elasticsearch-blackbox-servicemonitor.yaml
│   │   ├── installation
│   │   ├── out.yaml
│   │   ├── rendered.yaml
│   │   └── values-monitor.yaml
│   ├── redis
│   │   ├── installation
│   │   ├── redis-cr.yaml
│   │   ├── redis-pvc.yaml
│   │   ├── redis-statefulset.yaml
│   │   └── redis-values.yaml
│   └── swagger-ui
└── test
    ├── e2e_test.py
    └── test_analyser_api_main.py

28 directories, 102 files
